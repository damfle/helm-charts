# Default values for homebox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Configuration for the generic subchart
generic:
  # Override naming to use "homebox" instead of "generic"
  nameOverride: "homebox"
  
  # Override image settings for Homebox
  image:
    repository: ghcr.io/sysadminsmedia/homebox
    pullPolicy: IfNotPresent
    tag: "0.21.0-rootless"  # Must be explicit for dependency charts

  # Service configuration 
  service:
    type: ClusterIP
    port: 7745  # Homebox runs on port 7745
    targetPort: http
    protocol: TCP
    portName: http

  # Remove containerPort as it's not supported in current generic chart

  # ServiceAccount configuration
  serviceAccount:
    create: true
    automount: true
    annotations: {}
    name: ""

  # Single replica for Homebox
  replicaCount: 1

  # Pod configuration
  podAnnotations: {}
  podLabels: {}
  imagePullSecrets: []

  # Node scheduling
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Homebox specific environment variables
  env:
    - name: TZ
      value: "Europe/Paris"
    - name: HBOX_MODE
      value: "production"
    - name: HBOX_OPTIONS_ALLOW_ANALYTICS
      value: "false"
    - name: HBOX_OPTIONS_ALLOW_REGISTRATION
      value: "false"
    - name: HBOX_DATABASE_DRIVER
      value: "postgres"
    - name: HBOX_DATABASE_HOST
      value: "postgres.databases.svc.cluster.local"
    - name: HBOX_DATABASE_PORT
      value: "5432"
    - name: HBOX_DATABASE_USERNAME
      value: "homebox"
    - name: HBOX_DATABASE_DATABASE
      value: "homebox"
    - name: HBOX_DATABASE_SSL_MODE
      value: "disable"
    # - name: HBOX_DATABASE_PASSWORD
    #   value: ""

  # Configure persistence for Homebox data
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 1Gi
    mountPath: /data
    annotations: {}
    labels: {}

  # Resource limits and requests
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # Health checks
  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000

  # ServiceMonitor for Prometheus monitoring (disabled by default)
  serviceMonitor:
    enabled: false
    portName: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

  # Ingress configuration (recommended for external access)
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # For Traefik (as per your setup):
      # traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
      # traefik.ingress.kubernetes.io/router.middlewares: authentik-ak-outpost-authentik-embedded-outpost@kubernetescrd
    hosts:
      - host: homebox.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
      # - secretName: homebox-tls
      #   hosts:
      #     - homebox.local
