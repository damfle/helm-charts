# Default values for generic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: nginx
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nvidia:
  enabled: false

# Environment variables configuration
# For more information: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
env: []
# Example:
# - name: DATABASE_URL
#   value: "postgresql://localhost:5432/mydb"
# - name: API_KEY
#   valueFrom:
#     secretKeyRef:
#       name: my-secret
#       key: api-key

# Environment variables from external sources (ConfigMaps, Secrets)
# For more information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
envFrom: []
# Examples:
# - secretRef:
#     name: my-external-secret
# - configMapRef:
#     name: my-configmap

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: http
readinessProbe:
  enabled: true
  httpGet:
    path: /
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# This section is for setting up Prometheus ServiceMonitor for monitoring
# more information can be found here: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/design.md#servicemonitor
serviceMonitor:
  # Enable ServiceMonitor creation
  enabled: false
  # ServiceMonitor annotations
  annotations: {}
  # ServiceMonitor labels
  labels: {}
  # Scrape interval
  interval: 30s
  # Scrape timeout
  scrapeTimeout: 10s
  # HTTP path to scrape for metrics
  path: /metrics
  # Port name to scrape metrics from (should match service port name)
  portName: http
  # Additional metric relabelings
  metricRelabelings: []
  # Additional relabelings
  relabelings: []

# This section is for setting up Persistent Volume Claims
# more information can be found here: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
# Note: Reclaim policy is controlled by the StorageClass, not the PVC
persistence:
  # Enable persistence
  enabled: false
  # Storage class name (leave empty for default)
  # The reclaim policy (Retain, Delete, Recycle) is defined by the StorageClass
  storageClassName: ""
  # Access modes
  accessModes:
    - ReadWriteOnce
  # Storage size
  size: 8Gi
  # PVC annotations
  annotations: {}
  # PVC labels
  labels: {}
  # Mount path in the container
  mountPath: /data
  # Subpath within the volume
  subPath: ""
